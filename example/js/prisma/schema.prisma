generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model graft_migrations {
  id                  String    @id @db.VarChar(255)
  checksum            String    @db.VarChar(64)
  finished_at         DateTime? @db.Timestamptz(6)
  migration_name      String    @db.VarChar(255)
  logs                String?
  rolled_back_at      DateTime? @db.Timestamptz(6)
  started_at          DateTime  @default(now()) @db.Timestamptz(6)
  applied_steps_count Int       @default(0)

  @@map("_graft_migrations")
}

model categories {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  posts      posts[]
}

model comments {
  id         Int      @id @default(autoincrement())
  post_id    Int
  user_id    Int
  content    String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  posts      posts    @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model posts {
  id          Int        @id @default(autoincrement())
  user_id     Int
  category_id Int?
  title       String
  content     String
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  updated_at  DateTime   @default(now()) @db.Timestamptz(6)
  comments    comments[]
  categories  categories? @relation(fields: [category_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  users       users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  address    String?    @db.VarChar(255)
  email      String     @unique @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  isadmin    Boolean    @default(false)
  comments   comments[]
  posts      posts[]
}